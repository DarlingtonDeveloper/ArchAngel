# Use Node.js as the base image to support ESLint
FROM node:16-alpine

# Install Python for Pylint
RUN apk add --no-cache python3 py3-pip

# Set up a directory for our linters
WORKDIR /usr/src/linters

# Install ESLint and TypeScript-related packages
RUN npm init -y && \
    npm install --save-dev eslint@8.31.0 \
    typescript@4.9.4 \
    @typescript-eslint/parser@5.48.1 \
    @typescript-eslint/eslint-plugin@5.48.1 \
    eslint-plugin-react@7.32.0 \
    eslint-plugin-node@11.1.0 \
    eslint-config-standard@17.0.0

# Create global symlinks for ESLint
RUN mkdir -p /usr/local/bin && \
    ln -s /usr/src/linters/node_modules/.bin/eslint /usr/local/bin/eslint

# Install Pylint and other Python tools
RUN pip3 install --no-cache-dir pylint==2.15.10 \
    pycodestyle==2.10.0 \
    black==22.12.0 \
    mypy==0.991 \
    isort==5.11.4

# Verify installations
RUN eslint --version && \
    pylint --version && \
    pycodestyle --version

# Create a default ESLint configuration
RUN echo '{ \
  "env": { \
    "browser": true, \
    "es2021": true, \
    "node": true \
  }, \
  "extends": "eslint:recommended", \
  "parserOptions": { \
    "ecmaVersion": "latest", \
    "sourceType": "module" \
  }, \
  "rules": { \
    "semi": ["error", "always"], \
    "quotes": ["warn", "single"], \
    "no-unused-vars": "warn" \
  } \
}' > /usr/src/linters/.eslintrc.json

# Create a default TypeScript ESLint configuration
RUN echo '{ \
  "parser": "@typescript-eslint/parser", \
  "plugins": ["@typescript-eslint"], \
  "extends": [ \
    "eslint:recommended", \
    "plugin:@typescript-eslint/recommended" \
  ], \
  "parserOptions": { \
    "ecmaVersion": "latest", \
    "sourceType": "module" \
  }, \
  "rules": { \
    "semi": ["error", "always"], \
    "quotes": ["warn", "single"], \
    "@typescript-eslint/explicit-function-return-type": "warn", \
    "@typescript-eslint/no-explicit-any": "warn" \
  } \
}' > /usr/src/linters/.eslintrc.typescript.json

# Create a volume to share linter configurations and libraries
VOLUME /usr/local/lib

# Keep the container running
CMD ["tail", "-f", "/dev/null"]