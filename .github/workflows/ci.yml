name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  backend-test:
    name: Backend Tests
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: codehawk_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18
          
      - name: Install dependencies
        run: |
          cd codehawk/backend
          go mod download
      
      - name: Run linter
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          working-directory: codehawk/backend
      
      - name: Run tests
        run: |
          cd codehawk/backend
          go test -v ./... -coverprofile=coverage.txt -covermode=atomic
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./codehawk/backend/coverage.txt
          flags: backend
  
  extension-test:
    name: Extension Tests
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
          
      - name: Install dependencies
        run: |
          cd codehawk/vscode-extension
          npm ci
      
      - name: Lint code
        run: |
          cd codehawk/vscode-extension
          npm run lint
      
      - name: Run tests
        run: |
          cd codehawk/vscode-extension
          npm run test
  
  build:
    name: Build
    needs: [backend-test, extension-test]
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
      
      - name: Build backend
        run: |
          cd codehawk/backend
          make build
      
      - name: Build extension
        run: |
          cd codehawk/vscode-extension
          npm ci
          npm run compile
      
      - name: Package extension
        run: |
          cd codehawk/vscode-extension
          npm run package
      
      - name: Upload backend artifact
        uses: actions/upload-artifact@v3
        with:
          name: backend
          path: codehawk/backend/bin/codehawk-api
      
      - name: Upload extension artifact
        uses: actions/upload-artifact@v3
        with:
          name: extension
          path: codehawk/vscode-extension/*.vsix
  
  docker:
    name: Docker Build
    needs: [build]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      
      - name: Extract branch name
        shell: bash
        run: echo "BRANCH_NAME=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV
      
      - name: Build and push backend image
        uses: docker/build-push-action@v3
        with:
          context: ./codehawk/backend
          push: true
          tags: |
            codehawk/api:latest
            codehawk/api:${{ env.BRANCH_NAME }}
            codehawk/api:${{ github.sha }}
      
      - name: Build and push linters image
        uses: docker/build-push-action@v3
        with:
          context: ./codehawk/backend
          file: ./codehawk/backend/Dockerfile.linters
          push: true
          tags: |
            codehawk/linters:latest
            codehawk/linters:${{ env.BRANCH_NAME }}
            codehawk/linters:${{ github.sha }}