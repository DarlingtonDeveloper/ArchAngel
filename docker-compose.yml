version: '3.8'

services:
  # CodeHawk API Server
  api:
    build:
      context: ./codehawk/backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - PORT=8080
      - API_KEY=demo_api_key_123
      - PYLINT_PATH=/usr/local/bin/pylint
      - ESLINT_PATH=/usr/local/bin/eslint
      - LOG_LEVEL=info
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=codehawk
    volumes:
      - ./codehawk/backend:/app
      - go-modules:/go/pkg/mod
    depends_on:
      - postgres
    restart: unless-stopped

  # Database for storing analysis results and user data
  postgres:
    image: postgres:14-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=codehawk
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./codehawk/backend/scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    restart: unless-stopped

  # Redis for caching and job queue
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: unless-stopped

  # Development container for linters (used by the API server)
  linters:
    build:
      context: ./codehawk/backend
      dockerfile: Dockerfile.linters
    volumes:
      - linters-data:/usr/local/lib
    depends_on:
      - api
    restart: unless-stopped

volumes:
  postgres-data:
  redis-data:
  go-modules:
  linters-data: